generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  CUSTOMER
  USER
}

model User {
  id           Int       @id @default(autoincrement())
  firstName    String
  middleName   String?
  lastName     String
  gender       String
  bloodGroup   String?
  dateBirth    String?
  email        String    @unique
  password     String
  role         UserRole  @default(USER)
  contactNo    String
  address      String
  profileImage String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  customers    Customer?
  admins       Admin?

  @@map("users")
}

model Customer {
  id           Int      @id @default(autoincrement())
  firstName    String
  middleName   String?
  lastName     String
  gender       String
  bloodGroup   String?
  dateBirth    String?
  email        String   @unique
  role         UserRole @default(CUSTOMER)
  contactNo    String
  address      String
  profileImage String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       Int      @unique
  users        User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("customers")
}

model Admin {
  id           Int      @id @default(autoincrement())
  firstName    String
  middleName   String?
  lastName     String
  gender       String
  bloodGroup   String?
  dateBirth    String?
  email        String   @unique
  role         UserRole @default(ADMIN)
  contactNo    String
  address      String
  profileImage String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       Int      @unique
  users        User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("admins")
}

model ProductCategory {
  id                   Int                  @id @default(autoincrement())
  name                 String               @unique
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  subProductCategories SubProductCategory[]

  @@map("productCategories")
}

model SubProductCategory {
  id                Int             @id @default(autoincrement())
  name              String
  productCategoryId Int
  productCategory   ProductCategory @relation(fields: [productCategoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  @@map("subProductCategories")
}
